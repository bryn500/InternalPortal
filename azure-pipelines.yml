# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

variables:
- name: BuildConfiguration
  value: 'Release'

trigger:
  - main

pool:
  vmImage: "windows-latest"
  demands: npm

steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: "**/*.csproj"
      
  - task: Bash@3
    displayName: Check NuGet vulnerabilities
    inputs:
      targetType: 'inline'
      script: |      
        dotnet list InternalPortal.sln package --vulnerable | tee vulnerable.out #--include-transitive
        test `grep -cm 1 'has the following vulnerable packages' vulnerable.out` = 0
      
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: "**/*.csproj"
      arguments: "--configuration $(BuildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: |
        **/*.Tests/*.csproj
        !**/*.UITests.csproj
      arguments: "--configuration $(BuildConfiguration)"  

  - task: Npm@1
    displayName: 'Audit Application'
    inputs:
      command: custom
      workingDir: src/InternalPortal.Web
      verbose: false
      customCommand: 'run audit'
      
  - task: Npm@1
    displayName: "npm install Web"
    inputs:
      command: ci
      workingDir: src/InternalPortal.Web
      verbose: false

  - task: Npm@1
    displayName: "npm build Web"
    inputs:
      command: custom
      workingDir: src/InternalPortal.Web
      verbose: false
      customCommand: "run build"

  - task: DotNetCoreCLI@2
    displayName: "Publish Web"
    inputs:
      command: publish
      publishWebProjects: false
      projects: "**/InternalPortal.Web.csproj"
      arguments: "--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/Web"
      zipAfterPublish: True

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact"
    inputs:
      PathtoPublish: "$(build.artifactstagingdirectory)"
    condition: succeededOrFailed()
